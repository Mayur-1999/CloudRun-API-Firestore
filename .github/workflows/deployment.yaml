name: 'Two-Tier-CloudRun-Firestore-API'
on:
 workflow_dispatch:
permissions:
  contents: read
  id-token: write
env:
  PROJECT_ID: qwiklabs-gcp-00-afa913533ba0

jobs:
  terraform1:
    name: 'Terraform Bootstrap'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/CloudRun-API-Firestore/CloudRun-API-Firestore/Bootstrap

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
  
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Fmt
      run: terraform fmt
        
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}  

  terraform2:
    name: 'Image_Build'
    runs-on: ubuntu-latest
    needs: terraform1
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/CloudRun-API-Firestore/CloudRun-API-Firestore

    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: gcloud 
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}

      - run: |-
          gcloud --quiet auth configure-docker

      - name: Cloning the repository, docker build and push
        run: |
            git clone https://github.com/GoogleCloudPlatform/nodejs-getting-started.git
            cd nodejs-getting-started/bookshelf
            docker build -t gcr.io/${{env.PROJECT_ID}}/app .
            docker push gcr.io/${{env.PROJECT_ID}}/app    
    
      - run: |-
            gcloud --quiet auth configure-docker  

  terraform3:
    name: 'Terraform 1st Deployment'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/CloudRun-API-Firestore/CloudRun-API-Firestore/first-deployment
    needs: terraform2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

       
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}    
      

      - name: Terraform Validate
        run: terraform validate
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

  terraform4:
    name: 'Terraform 2nd Deployment'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/CloudRun-API-Firestore/CloudRun-API-Firestore/second-deployment
    needs: terraform3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: env config 
        run: |
          export URL=$(gcloud run services describe book-shelf-app --region=us-central1 --format='value(status.url)') --project=${{env.PROJECT_ID}} 
          echo $URL
          sed -i "s|XYZ|$URL|g" spec.yaml
             
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}    
      

      - name: Terraform Validate
        run: terraform validate
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 
